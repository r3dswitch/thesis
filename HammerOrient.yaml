# if given, will override the device setting in gym. 
env: 
  env_name: "Hammer Orient"
  numEnvs: 128
  envSpacing: 2
  episodeLength: 300
  enableDebugVis: False
  cameraDebug: True
  pointCloudDebug: True
  aggregateMode: 1
  stiffnessScale: 1.0
  forceLimitScale: 1.0
  useRelativeControl: True
  dofSpeedScale: 100.0
  actionsMovingAverage: 0.9
  controlFrequencyInv: 1 # 60 Hz

  startPositionNoise: 0.0
  startRotationNoise: 0.0
  gravity: 0
  resetPositionNoise: 0.0
  resetRotationNoise: 0.0
  resetDofPosRandomInterval: 0.01
  resetDofVelRandomInterval: 0.0

  distRewardScale: 20
  transition_scale: 0.5
  orientation_scale: 0.1
  rotRewardScale: 1.0
  rotEps: 0.1
  actionPenaltyScale: -0.0002
  reachGoalBonus: 250
  fallDistance: 0.4
  fallPenalty: 0.0

  observationType: "full_state" # full_state or point_cloud
  handAgentIndex: "[[0, 1, 2, 3, 4, 5]]"
  numObservations: 200
  numStates: 0
  asymmetric_observations: False
  successTolerance: 0.1
  printNumSuccesses: False
  maxConsecutiveSuccesses: 0

  debug: True
  upAxis: 'z'
  maxEpisodeLength: 300

  knockDist: 0.6 # 0.5 + 0.1
  failDistIK: 0.5
  failDistHand: 10
  graspSuccessDist: 0.75
  liftSuccessDist: 1

  jacobianActorName: "hand"
  endEffectorLinkName: "link_7"
  wristRotModQuaternion: [0.707, 0.707, 0, 0]

  asset:
    handAssetRoot: "../../assets"
    handAssetFileName: "urdf/right_hit.urdf"
    handAssetOptions:
      fixBaseLink: True
      disableGravity: True
    objectAssetRoot: "/home/smondal/Desktop/DexterousHands/assets/urdf/grasp_and_orient/harmmer"
    objectAssetFileName: "harmmer.urdf"
    objectAssetOptions:
      fixBaseLink: False

  graspDataset:
    baseDir: "/home/smondal/Desktop/DexterousHands/affordpose_data/Dataset/Single_YCB_Pitcher/validated"
    meshDir: "/home/smondal/Desktop/DexterousHands/affordpose_data/Dataset/Single_YCB_Pitcher/manifold"
    datasetRegex: "object_point_cloud_*.pt"
    graspPath: "/home/smondal/Desktop/DexterousHands/affordpose_data/Dataset/Single_YCB_Pitcher/validated/filtered_grasps.npy"
    isFullDataset: False

  handPositions:
    defaultPos: [1.99,-0.64,-1.92,1.44,-1.07,-1.65,1.53]
    trajectoryPosList: [[1.99,-0.64,-1.92,1.44,-1.07,-1.65,1.53]]

  stages:
    preempt: 0
    ik: 100
    grasp: 150
    rl: 175
    lift: 200
    
task:
  randomize: False
  randomization_params:
    frequency: 600   # Define how many simulation steps between generating new randomizations
    observations:
      range: [0, .002] # range for the white noise
      range_correlated: [0, .001 ] # range for correlated noise, refreshed with freq `frequency`
      operation: "additive"
      distribution: "gaussian"
      schedule: "linear"   # "constant" is to turn on noise after `schedule_steps` num steps
      schedule_steps: 40000
    actions:
      range: [0., .05]
      range_correlated: [0, .015] # range for correlated noise, refreshed with freq `frequency`
      operation: "additive"
      distribution: "gaussian"
      schedule: "linear"  # "linear" will linearly interpolate between no rand and max rand
      schedule_steps: 40000
    sim_params: 
      gravity:
        range: [0, 0.4]
        operation: "additive"
        distribution: "gaussian"
        schedule: "linear"  # "linear" will linearly interpolate between no rand and max rand
        schedule_steps: 40000
    actor_params:
      hand:
        color: True
        tendon_properties:
          damping:
            range: [0.3, 3.0]
            operation: "scaling"
            distribution: "loguniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 30000
          stiffness:
            range: [0.75, 1.5]
            operation: "scaling"
            distribution: "loguniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 30000
        dof_properties:
          damping: 
            range: [0.3, 3.0]
            operation: "scaling"
            distribution: "loguniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 30000
          stiffness: 
            range: [0.75, 1.5]
            operation: "scaling"
            distribution: "loguniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 30000
          lower:
            range: [0, 0.01]
            operation: "additive"
            distribution: "gaussian"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 30000
          upper:
            range: [0, 0.01]
            operation: "additive"
            distribution: "gaussian"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 30000
        rigid_body_properties:
          mass: 
            range: [0.5, 1.5]
            operation: "scaling"
            distribution: "uniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 30000
        rigid_shape_properties:
          friction: 
            num_buckets: 250
            range: [0.7, 1.3]
            operation: "scaling"
            distribution: "uniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 30000
      object:
        scale:
          range: [0.95, 1.05]
          operation: "scaling"
          distribution: "uniform"
          schedule: "linear"  # "linear" will scale the current random sample by ``min(current num steps, schedule_steps) / schedule_steps`
          schedule_steps: 30000
        rigid_body_properties:
          mass: 
            range: [0.5, 1.5]
            operation: "scaling"
            distribution: "uniform"
            schedule: "linear"  # "linear" will scale the current random sample by ``min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 30000
        rigid_shape_properties:
          friction:
            num_buckets: 250
            range: [0.7, 1.3]
            operation: "scaling"
            distribution: "uniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 30000

sim:
  substeps: 2
  physx:
    num_threads: 4
    solver_type: 1  # 0: pgs, 1: tgs
    num_position_iterations: 4
    num_velocity_iterations: 0
    contact_offset: 0.002
    rest_offset: 0.0
    bounce_threshold_velocity: 0.2
    max_depenetration_velocity: 1000.0
    default_buffer_size_multiplier: 5.0
  flex:
    num_outer_iterations: 5
    num_inner_iterations: 20
    warm_start: 0.8
    relaxation: 0.75
